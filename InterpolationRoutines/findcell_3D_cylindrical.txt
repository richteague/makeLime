void findcell(double c1, double c2, double c3, int *aidx, int *bidx, int *cidx,
              int *didx, int *eidx, int *fidx, int *gidx, int *hidx) {

    // Finds the appropriate cell boundaries for the given point.
    // Assumes the three coords are r = c1, z = c2 and  phi = c3.
    // The arrays are named c1arr, c2arr and c3arr respectively.
    // Returning aidx = -1 says that the point cannot be interpolated.

    double c1lower, c1upper, c3lower, c3upper;
    int i = 0;

    // Find the bounds of the phi points.
    
    while (c3arr[i] < c3) {
        if (i == NCELLS-1) {
            break;
        }
    }

    c3lower = c3arr[i];
    c3higher = c3arr[0];

    // For each of the phi slices, do as in the 2D case.
    // Find the bounds of the radial points, lower phi position.
    
    i = 0
    for (i=0; i<(NCELLS-1); i=i+1) {
        if (c3arr[i] == c3lower && c3arr[i-1] == c3lower) {
            if ((c1arr[i]-c1) * (c1arr[i-1]-c1) < 0.) {
                break;
        }
    }

    c1upper = c1arr[i];
    c1lower = c1arr[i-1];

    // Find the bounds of the vertical points at the lower radial position, lower phi position.

    i = 0;
    for(i=0; i<(NCELLS-1); i=i+1) {
        if (c3arr[i] == c3lower && c1arr[i] == c1lower && c1arr[i-1] == c1lower) {
            if ((c2arr[i]-c2)*(c2arr[i-1]-c2) < 0.) {
                break;
            }
        }
    }

    if (c1arr[i] != c1lower) {
        *aidx = -1;
        return;
    }

    *bidx = i;
    *aidx = i-1; 

    // Find the bounds of the vertical points at the upper radial position, lower phi position.

    i = 0;
    for(i=0; i<(NCELLS-1); i=i+1) {    
        if (c3arr[i] == c3lower && c1arr[i] == c1upper && c1arr[i-1] == c1upper) {
            if ((c2arr[i]-c2)*(c2arr[i-1]-c2) < 0.) {
                break;
            }
        }
    }  
    
    if (c1arr[i] != c1upper) {
        *aidx = -1;
        return;
    }  
      
    *didx = i;
    *cidx = i-1;         

    // Find the bounds of the radial points, upper phi position.
    
    i = 0
    for (i=0; i<(NCELLS-1); i=i+1) {
        if (c3arr[i] == c3upper && c3arr[i-1] == c3upper) {
            if ((c1arr[i]-c1) * (c1arr[i-1]-c1) < 0.) {
                break;
        }
    }

    c1upper = c1arr[i];
    c1lower = c1arr[i-1];

    // Find the bounds of the vertical points at the lower radial position, lower phi position.

    i = 0;
    for(i=0; i<(NCELLS-1); i=i+1) {
        if (c3arr[i] == c3upper && c1arr[i] == c1lower && c1arr[i-1] == c1lower) {
            if ((c2arr[i]-c2)*(c2arr[i-1]-c2) < 0.) {
                break;
            }
        }
    }

    if (c1arr[i] != c1lower) {
        *aidx = -1;
        return;
    }

    *fidx = i;
    *eidx = i-1; 

    // Find the bounds of the vertical points at the upper radial position, lower phi position.

    i = 0;
    for(i=0; i<(NCELLS-1); i=i+1) {    
        if (c3arr[i] == c3upper && c1arr[i] == c1upper && c1arr[i-1] == c1upper) {
            if ((c2arr[i]-c2)*(c2arr[i-1]-c2) < 0.) {
                break;
            }
        }
    }  
    
    if (c1arr[i] != c1upper) {
        *aidx = -1;
        return;
    }  
      
    *hidx = i;
    *gidx = i-1;         

}
